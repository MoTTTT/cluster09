opensearchHosts: "https://opensearch-cluster-master:9200"
replicaCount: 1
image:
  repository: "opensearchproject/opensearch-dashboards"
  tag: ""
  pullPolicy: "IfNotPresent"
startupProbe:
  tcpSocket:
    port: 5601
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 20
  successThreshold: 1
  initialDelaySeconds: 10
livenessProbe:
  tcpSocket:
    port: 5601
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 10
  successThreshold: 1
  initialDelaySeconds: 10
readinessProbe:
  tcpSocket:
    port: 5601
  periodSeconds: 20
  timeoutSeconds: 5
  failureThreshold: 10
  successThreshold: 1
  initialDelaySeconds: 10
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name: ""
rbac:
  create: true
secretMounts: []
podAnnotations: {}
dashboardAnnotations: {}
extraEnvs: []
envFrom: []
extraVolumes: []
extraVolumeMounts: []
extraInitContainers: ""
extraContainers: ""
podSecurityContext: {}
securityContext:
  capabilities:
    drop:
      - ALL
  runAsNonRoot: true
  runAsUser: 1000
config: {}
opensearchDashboardsYml:
  defaultMode:
priorityClassName: ""
opensearchAccount:
  secret: ""
  keyPassphrase:
    enabled: false
labels: {}
hostAliases: []
serverHost: "0.0.0.0"
service:
  type: ClusterIP
  port: 5601
  metricsPort: 9601
  loadBalancerIP: ""
  nodePort: ""
  labels: {}
  annotations: {}
  loadBalancerSourceRanges: []
  httpPortName: http
  metricsPortName: metrics
resources:
  requests:
    cpu: "400m"
    memory: "512M"
  limits:
    cpu: "800m"
    memory: "512M"
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPU: "80"
  targetMemory: "80"
updateStrategy:
  type: "Recreate"
nodeSelector: {}
tolerations: []
affinity: {}
topologySpreadConstraints: []
extraObjects: []
lifecycle: {}
plugins:
  enabled: false
  installList: []
  removeList: []
serviceMonitor:
  enabled: false
  path: /_prometheus/metrics
  interval: 10s
  labels: {}
